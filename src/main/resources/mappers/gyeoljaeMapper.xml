<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.gyeoljaeMapper">
	
		
	<select id="selectGyeoljaeSawonList" parameterType="map" resultType="map">
		select 사원코드 sawonCode,
			       사원명 sawonName,
			       이메일 email,
			       직급명 sawonPosition,
			       사원아이디 sawonId
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		   and (T1.팀리더 = 'Y' or T1.사원코드 in (select 사원코드  from [동림].[dbo].[관리팀] where 부서코드 = #{department}))
		 <if test="searchSawonName != null">
		   and T1.사원명 = #{searchSawonName}
		 </if>
		 <if test="excludeSawonList != null">
		   and T1.사원코드  not in  
		 <foreach collection="excludeSawonList" item="sawonCode" separator="," open="(" close=")">
			#{sawonCode}
		</foreach>
		 </if>
		 order by T1.사원명
	</select>
	
	<select id="selectMyDefaultGyeoljaeLine" parameterType="map" resultType="map">
		select T1.사원코드 sawonCode, T1.사원명 sawonName, T1.사원아이디 sawonId, T2.직급명 sawonPosition, T1.이메일 email
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		 <if test="teamCode != null">
		   and ((T1.팀코드 = #{teamCode} and T1.팀리더 = 'Y')
		    or (T1.사원코드 in (select 사원코드 from [동림].[dbo].[관리팀] where 팀코드  = #{teamCode})))
		 </if>
		 <if test='teamCode == null and position != "1"'>
		   and (T1.사원코드 = #{sawonCode}
		    or T2.직급코드 = 1)
		 </if>
		 <if test='teamCode == null and position == "1"'>
		   and T2.직급코드 = 1
		 </if>
		 order by T2.직급코드 desc
	</select>
	
	<insert id="insertNewGyeoljae" parameterType="Sangsin">
		insert into [동림].[dbo].[상신](기안제목, 기안내용_CODE, 기안내용_PLAIN, 결재처리자, 기안자, 처리상태, 최종처리, 기안작성일) 
		values (#{title}, #{content}, #{plainContent}, #{gyeoljaeja}, #{gianja}, 'D', 'D', getDate())
		<selectKey keyProperty="sangsinNum" resultType="int" order="AFTER">
        	SELECT IDENT_CURRENT('[동림].[dbo].[상신]')
    	</selectKey>
	</insert>
	
	<insert id="insertGyeoljaeLines" parameterType="Sangsin">
		insert into [동림].[dbo].[결재라인](상신코드, 결재처리자, 결재순서, 처리상태)
		values 
		<foreach collection="gyeoljaeLines" item="lines" separator=" , ">
		(#{sangsinNum}, #{lines.sawonCode}, #{lines.order}, 'D')
		</foreach>
	</insert>
	
	<insert id="insertGyeoljaeAttachFiles" parameterType="Sangsin">
		insert into [동림].[dbo].[상신첨부파일](파일명, 파일크기, 파일확장자, 파일내용, 상신코드)
		values 
		<foreach collection="attachFiles" item="file" separator=" , ">
		(#{file.name}, #{file.size}, #{file.ext}, #{file.fileByte}, #{sangsinNum})
		</foreach>
	</insert>
	
	<select id="selectMySangsin" parameterType="string" resultType="map">
		select 기안제목 title, T2.사원명 gianja, 처리상태 status, convert(char(10), 기안작성일, 20) writeDate, 첨부파일수 attCnt
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[사원] T2
		    on T1.기안자 = T2.사원코드
		  left outer join (
		  	 select count(파일코드) 첨부파일수, 상신코드
		  	   from [동림].[dbo].[상신첨부파일]
		  	  group by 상신코드
		  ) T3
		    on T1.상신코드 = T3.상신코드
		 where 기안자 = #{gianja}
		 order by 기안작성일 desc
	</select>
	
	<select id="selectMyGyeoljae" statementType="CALLABLE" parameterType="map" resultType="map">
		{call [동림].[dbo].[UP_내결재건](
			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int}
		)}
	</select>
</mapper>
