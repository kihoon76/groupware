<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.gyeoljaeMapper">
	
		
	<select id="selectGyeoljaeSawonList" parameterType="map" resultType="map">
		select 사원코드 sawonCode,
			       사원명 sawonName,
			       이메일 email,
			       직급명 sawonPosition,
			       사원아이디 sawonId
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		   and (T1.팀리더 = 'Y' or T1.사원코드 in (select 사원코드  from [동림].[dbo].[관리팀] where 부서코드 = #{department}))
		 <if test="searchSawonName != null">
		   and T1.사원명 = #{searchSawonName}
		 </if>
		 <if test="excludeSawonList != null">
		   and T1.사원코드  not in  
		 <foreach collection="excludeSawonList" item="sawonCode" separator="," open="(" close=")">
			#{sawonCode}
		</foreach>
		 </if>
		 order by T1.사원명
	</select>
	
	<select id="selectMyDefaultGyeoljaeLine" parameterType="map" resultType="map">
		select T1.사원코드 sawonCode, T1.사원명 sawonName, T1.사원아이디 sawonId, T2.직급명 sawonPosition, T1.이메일 email
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		 <if test="teamCode != null">
		   and ((T1.팀코드 = #{teamCode} and T1.팀리더 = 'Y')
		    or (T1.사원코드 in (select 사원코드 from [동림].[dbo].[관리팀] where 팀코드  = #{teamCode})))
		 </if>
		 <if test='teamCode == null and position != "1"'>
		   and (T1.사원코드 = #{sawonCode}
		    or T2.직급코드 = 1)
		 </if>
		 <if test='teamCode == null and position == "1"'>
		   and T2.직급코드 = 1
		 </if>
		 order by T2.직급코드 desc
	</select>
	
	<insert id="insertNewGyeoljae" parameterType="Sangsin">
		insert into [동림].[dbo].[상신](기안제목, 기안내용_CODE, 기안내용_PLAIN, 기안자, 처리상태, 기안작성일) 
		values (#{title}, #{content}, #{plainContent}, #{gianja}, 'D', getDate())
		<selectKey keyProperty="sangsinNum" resultType="int" order="AFTER">
        	SELECT IDENT_CURRENT('[동림].[dbo].[상신]')
    	</selectKey>
	</insert>
	
	<insert id="insertGyeoljaeLines" parameterType="Sangsin">
		insert into [동림].[dbo].[결재라인](상신코드, 결재처리자, 결재순서, 처리상태)
		values 
		<foreach collection="gyeoljaeLines" item="lines" separator=" , ">
		(#{sangsinNum}, #{lines.sawonCode}, #{lines.order}, #{lines.status})
		</foreach>
	</insert>
	
	<insert id="insertGyeoljaeAttachFiles" parameterType="Sangsin">
		insert into [동림].[dbo].[상신첨부파일](파일명, 파일크기, 파일확장자, 파일내용, 상신코드)
		values 
		<foreach collection="attachFiles" item="file" separator=" , ">
		(#{file.name}, #{file.size}, #{file.ext}, #{file.fileByte}, #{sangsinNum})
		</foreach>
	</insert>
	
	<select id="selectMySangsinTotalCount" parameterType="map" resultType="map">
		select ceiling((count(상신코드) + 0.0)/(${size}+0.0)) page, count(상신코드) total
		  from [동림].[dbo].[상신]
		 where 기안자 = #{gianja}
		 <if test='searchStatus neq "A"'>
		   and 처리상태 = #{searchStatus}
		 </if>
		 <choose>
		 <when test='searchTextType eq "T"'>
		   and 기안제목 like #{searchText}  {escape '`'}
		 </when>
		 </choose>
		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
	</select>
	
	<select id="selectMySangsin" parameterType="map" resultType="map">
		<choose>
		<when test="summary == -1">
		select sangsinNum, title, gianja, status, attCnt, writeDate, attCnt
		  from (
				select row_number() over(order by 기안작성일 desc) as rnum, T1.상신코드  sangsinNum, 기안제목 title, T2.사원명 gianja,
					   case when 처리상태 = 'D' then '기안'
					        when 처리상태 = 'S' then '결재중'
					        when 처리상태 = 'C' then '결재완료'
					        when 처리상태 = 'R' then '반려'
					   end status, 
					   convert(char(16), 기안작성일, 20) writeDate, 첨부파일수 attCnt
				  from [동림].[dbo].[상신] T1
				 inner join [동림].[dbo].[사원] T2
				    on T1.기안자 = T2.사원코드
				  left outer join (
				  	 select count(파일코드) 첨부파일수, 상신코드
				  	   from [동림].[dbo].[상신첨부파일]
				  	  group by 상신코드
				  ) T3
				    on T1.상신코드 = T3.상신코드
				 where 기안자 = #{gianja}
				 <if test='searchStatus neq "A"'>
		   		   and 처리상태 = #{searchStatus}
		 		</if>
		 		<choose>
		 		<when test='searchTextType eq "T"'>
		   		   and 기안제목 like #{searchText}  {escape '`'}
		 		</when>
		 		</choose>
		 		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
		  ) T1
		  where rnum >= #{start} and rnum <![CDATA[<]]> #{end}
		</when>
		<otherwise>
		select top ${summary} T1.상신코드  sangsinNum, 기안제목 title, T2.사원명 gianja,
			   case when 처리상태 = 'D' then '기안'
			        when 처리상태 = 'S' then '결재중'
			        when 처리상태 = 'C' then '결재완료'
			        when 처리상태 = 'R' then '반려'
			   end status, 
			   convert(char(16), 기안작성일, 20) writeDate, 첨부파일수 attCnt
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[사원] T2
		    on T1.기안자 = T2.사원코드
		  left outer join (
		  	 select count(파일코드) 첨부파일수, 상신코드
		  	   from [동림].[dbo].[상신첨부파일]
		  	  group by 상신코드
		  ) T3
		    on T1.상신코드 = T3.상신코드
		 where 기안자 = #{gianja}
		 order by 기안작성일 desc
		</otherwise>
		</choose>
	</select>
	
<!-- 	<select id="selectMyGyeoljae" statementType="CALLABLE" parameterType="map" resultType="map"> -->
<!-- 		{call [동림].[dbo].[UP_내결재건]( -->
<!-- 			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int} -->
<!-- 		)} -->
<!-- 	</select> -->
	
	<select id="selectMyGyeoljae" parameterType="map" resultType="map">
		select T1.상신코드 sangsinNum, T1.기안제목 title, T4.사원명 gianja, 
		   case when T1.처리상태='D' then '기안'
				when T1.처리상태='S' then '결재중'
		   end as status,
		   convert(char(16), 기안작성일, 20) writeDate,
		   T3.첨부파일수 attCnt
	  from [동림].[dbo].[상신] T1
	 inner join [동림].[dbo].[결재라인] T2
	    on T1.상신코드 = T2.상신코드
	  left outer join (
	  	   select count(파일코드) 첨부파일수, 상신코드
		     from [동림].[dbo].[상신첨부파일]
		    group by 상신코드
	 ) T3  on T1.상신코드 = T3.상신코드
	 inner join [동림].[dbo].[사원] T4
	    on T1.기안자 = T4.사원코드 
	 where T2.결재처리자 = #{sawonCode}
	   and (T2.처리상태 = 'D' or T2.처리상태 = 'S')
	</select>
	
	<select id="selectMyCommitedGyeoljae" parameterType="map" resultType="map">
		select T1.상신코드 sangsinNum, T1.기안제목 title, T4.사원명 gianja, 
		   '결재완료' status,
		   convert(char(16), 기안작성일, 20) writeDate,
		   T3.첨부파일수 attCnt
	  from [동림].[dbo].[상신] T1
	  left outer join (
	  	   select count(파일코드) 첨부파일수, 상신코드
		     from [동림].[dbo].[상신첨부파일]
		    group by 상신코드
	 ) T3  on T1.상신코드 = T3.상신코드
	 inner join [동림].[dbo].[사원] T4
	    on T1.기안자 = T4.사원코드 
	 where T1.기안자 = #{sawonCode}
	   and T1.처리상태 = 'C'
	</select>
	
	<resultMap id="RM_Sangsin" type="Sangsin">
		<result column="상신코드" property="sangsinNum" javaType="int"/>
		<result column="기안제목" property="title" javaType="string"/>
		<result column="기안내용_CODE" property="content" javaType="string"/>
		<result column="기안내용_PLAIN" property="plainContent" javaType="string"/>
		<result column="기안자" property="gianja" javaType="string"/>
		<result column="기안작성일" property="writeDate" javaType="string"/>
		<collection property="attachFiles" column="상신코드" 
					javaType="java.util.ArrayList"
					ofType="AttachFile" 
					select="selectSangsinAttachFiles"
					/>
		<collection property="gyeoljaeLines" column="상신코드"
					javaType="java.util.ArrayList"
					ofType="map"
					select="selectGyeoljaeLines" />
	</resultMap>
	
	<select id="selectGyeoljaeLines" parameterType="string" resultType="map">
		select T2.사원명 gyeoljaeja, 결재순서 gyeoljaeOrder, 처리상태 status, T1.결재라인코드 code
		  from [동림].[dbo].[결재라인] T1
		 inner join [동림].[dbo].[사원] T2 
		    on T1.결재처리자 = T2.사원코드 
		 where T1.상신코드 = #{sangsinNum} 
		 order by 결재순서 
	</select>
	
	<select id="selectMyGyeoljaeDetail" parameterType="map" resultMap="RM_Sangsin">
		select T1.상신코드, 기안제목, 기안내용_CODE, T3.사원명 as 기안자, convert(char(16), 기안작성일, 20) 기안작성일
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[결재라인] T2
		    on T1.상신코드 = T2.상신코드
		 inner join [동림].[dbo].[사원] T3
		    on T1.기안자 = T3.사원코드
		 where T1.상신코드 = #{sangsinNum}
		   and T2.결재처리자 = #{sawonCode}
	</select> 
	
	<select id="selectMySangsinDetail" parameterType="map" resultMap="RM_Sangsin">
		select T1.상신코드, 기안제목, 기안내용_CODE, convert(char(16), 기안작성일, 20) 기안작성일
		  from [동림].[dbo].[상신] T1
		 where T1.상신코드 = #{sangsinNum}
		   and T1.기안자 = #{sawonCode}
	</select>
	
	<select id="selectSangsinAttachFiles" parameterType="string" resultType="AttachFile">
		select 파일명  name, 파일코드 code, 파일확장자 ext, 파일크기 size, 상신코드 sangsinNum
		  from [동림].[dbo].[상신첨부파일]
		 where 상신코드 = #{sangsinNum}
	</select>
	
	<select id="selectAttachFile" parameterType="map" resultType="AttachFile">
		select top 1 파일코드 code, 파일명 name, 파일확장자 ext, 파일내용 fileByte
		  from [동림].[dbo].[상신첨부파일] T1
		 inner join [동림].[dbo].[상신] T2
		    on T1.상신코드 = T2.상신코드
		 inner join [동림].[dbo].[결재라인] T3
		    on T3.상신코드 = T1.상신코드
		 where T1.파일코드 = #{attachFileCode}
		   and (T2.기안자 = #{sawonCode} or T3.결재처리자  = #{sawonCode})
	</select>
	
	<update id="updateCommitMyGyeoljae" statementType="CALLABLE" parameterType="map">
		{call [동림].[dbo].[UP_결재승인](
			#{sangsinCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{opinion, mode=IN, jdbcType=NVARCHAR, javaType=string},
			#{result, mode=OUT, jdbcType=INTEGER, javaType=int}
		)}
	</update>
	
	<update id="updateRejectMyGyeoljae" statementType="CALLABLE" parameterType="map">
		{call [동림].[dbo].[UP_결재반려](
			#{sangsinCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{opinion, mode=IN, jdbcType=NVARCHAR, javaType=string},
			#{result, mode=OUT, jdbcType=INTEGER, javaType=int}
		)}
	</update>
	
	<select id="selectGyeoljaeComment" parameterType="map" resultType="string">
		select 의견
		  from [동림].[dbo].[결재내역] T1
		 inner join [동림].[dbo].[상신] T2
		    on T1.상신코드 = T2.상신코드
		 where T2.기안자 = #{sawonCode}
		   and T1.결재라인코드 = #{gyeoljaeLineCode}
	</select>
</mapper>
