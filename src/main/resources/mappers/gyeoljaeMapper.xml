<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.gyeoljaeMapper">
	
		
	<select id="selectGyeoljaeSawonList" parameterType="map" resultType="map">
		select 사원코드 sawonCode,
			       사원명 sawonName,
			       이메일 email,
			       직급명 sawonPosition,
			       사원아이디 sawonId
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		   and (T1.팀리더 = 'Y' or T1.사원코드 in (select 사원코드  from [동림].[dbo].[관리팀] where 부서코드 = #{department}))
		 <if test="searchSawonName != null">
		   and T1.사원명 = #{searchSawonName}
		 </if>
		 <if test="excludeSawonList != null">
		   and T1.사원코드  not in  
		 <foreach collection="excludeSawonList" item="sawonCode" separator="," open="(" close=")">
			#{sawonCode}
		</foreach>
		 </if>
		 order by T1.사원명
	</select>
	
	<select id="selectMyDefaultGyeoljaeLine" parameterType="map" resultType="map">
		select T1.사원코드 sawonCode, T1.사원명 sawonName, T1.사원아이디 sawonId, T2.직급명 sawonPosition, T1.이메일 email
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		 <choose>
		 <when test="teamCode != null">
		   and ((T1.팀코드 = #{teamCode} and T1.팀리더 = 'Y')
		    or (T1.사원코드 in (select 사원코드 from [동림].[dbo].[관리팀] where 팀코드  = #{teamCode})))
		 </when>
		 <otherwise>
		 	<choose>
		 	<when test='position != "1"'>
		   and T1.사원코드 = (select 사원코드 from [동림].[dbo].[최종결재자] where 결재타입 = 1)
		 	</when>
		 	<otherwise>
		   and T2.직급구별 = 1
		 	</otherwise>
		 	</choose>
		 </otherwise>
		 </choose>
		   and T1.사원코드 != #{sawonCode}
		 order by T2.직급코드 desc
	</select>
	
	<select id="selectVacationDefaultGyeoljaeLine" parameterType="map" resultType="map">
		select T1.사원코드 sawonCode, T1.사원명 sawonName, T1.사원아이디 sawonId, T2.직급명 sawonPosition, T1.이메일 email
		  from [동림].[dbo].[사원] T1
		 inner join [동림].[dbo].[직급] T2 on T1.직급코드 = T2.직급코드
		 where T1.부서코드 = #{department}
		 <choose>
		 <when test="teamCode != null">
		   and ((T1.팀코드 = #{teamCode} and T1.팀리더 = 'Y')
		    or (T1.사원코드 = (select 사원코드 from [동림].[dbo].[최종결재자] where 결재타입 = 2)) 
		    or (T1.사원코드 in (select 사원코드 from [동림].[dbo].[관리팀] where 팀코드  = #{teamCode})))
		   and T2.직급구별 != 1
		 </when>
		 <otherwise>
		 	<choose>
		 	<when test='position != "1"'>
		    and T1.사원코드 = (select 사원코드 from [동림].[dbo].[최종결재자] where 결재타입 = 2)
		 	</when>
		 	<otherwise>
		    and T2.직급구별 = 1
		 	</otherwise>
		 	</choose>
		 </otherwise>
		 </choose> 
		   and T1.사원코드 != #{sawonCode}
		 order by T2.직급코드 desc
	</select>
	
	<insert id="insertNewGyeoljae" parameterType="Sangsin">
		insert into [동림].[dbo].[상신](기안제목, 기안내용_CODE, 기안내용_PLAIN, 기안자, 처리상태, 기안작성일, 결재타입, 휴가시작일, 휴가종료일, 결재서브타입, 휴가기간)
		<choose>
		<when test='gyeoljaeType == "2"'>
		values (#{title}, #{content}, #{plainContent}, #{gianja}, 'D', getDate(), #{gyeoljaeType}, #{startDate}, #{endDate}, #{gyeoljaeSubType}, #{term})
		</when>
		<otherwise>
		values (#{title}, #{content}, #{plainContent}, #{gianja}, 'D', getDate(), #{gyeoljaeType}, null, null, null, null)
		</otherwise>
		</choose> 
		
		<selectKey keyProperty="sangsinNum" resultType="int" order="AFTER">
        	SELECT IDENT_CURRENT('[동림].[dbo].[상신]')
    	</selectKey>
	</insert>
	
	<insert id="insertGyeoljaeLines" parameterType="Sangsin">
		insert into [동림].[dbo].[결재라인](상신코드, 결재처리자, 결재순서, 처리상태, PUSH내용)
		values 
		<foreach collection="gyeoljaeLines" item="lines" separator=" , ">
		(#{sangsinNum}, #{lines.sawonCode}, #{lines.order}, #{lines.status}, #{pushContent})
		</foreach>
	</insert>
	
	<insert id="insertGyeoljaeAttachFiles" parameterType="Sangsin">
		insert into [동림].[dbo].[상신첨부파일](파일명, 파일크기, 파일확장자, 파일내용, 상신코드)
		values 
		<foreach collection="attachFiles" item="file" separator=" , ">
		(#{file.name}, #{file.size}, #{file.ext}, #{file.fileByte}, #{sangsinNum})
		</foreach>
	</insert>
	
	<select id="selectMySangsinTotalCount" parameterType="map" resultType="map">
		select ceiling((count(상신코드) + 0.0)/(${size}+0.0)) page, count(상신코드) total
		  from [동림].[dbo].[상신]
		 where 기안자 = #{gianja}
		 <if test='searchGyeoljaeType neq "A"'>
		   and 결재타입 = #{searchGyeoljaeType}
		 </if>
		 <if test='searchStatus neq "A"'>
		   and 처리상태 = #{searchStatus}
		 </if>
		 <choose>
		 <when test='searchTextType eq "T"'>
		   and 기안제목 like #{searchText}  {escape '`'}
		 </when>
		 </choose>
		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
	</select>
	
	<select id="selectMyGyeoljaeTotalCount" parameterType="map" resultType="map">
		select ceiling((count(T1.상신코드) + 0.0)/(${size}+0.0)) page, count(T1.상신코드) total
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[결재라인] T2
	    	on T1.상신코드 = T2.상신코드 
		 where 결재처리자  = #{sawonCode}
		   and (T2.처리상태 = 'D' or T2.처리상태 = 'S')
		 <if test='searchStatus neq "A"'>
		   and T1.처리상태 = #{searchStatus}
		 </if>
		 <if test='searchGyeoljaeType neq "A"'>
		   and T1.결재타입 = #{searchGyeoljaeType}
		 </if>
		 <choose>
		 <when test='searchTextType eq "T"'>
		   and 기안제목 like #{searchText}  {escape '`'}
		 </when>
		 </choose>
		 <if test="limitDate == null">
		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
		 </if>
	</select>
	
	<select id="selectMyCommitedGyeoljaeTotalCount" parameterType="map" resultType="map">
		select ceiling((count(상신코드) + 0.0)/(${size}+0.0)) page, count(상신코드) total
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[사원] T2
		    on T1.기안자 = T2.사원코드
		 <choose>
		 <when test="sawonCode != null">
		  where 기안자  = #{sawonCode}
		   and 처리상태 = 'C'
		 </when>
		 <otherwise>
		  where 처리상태 = 'C'
		 </otherwise>
		 </choose>
		 <choose>
		 <when test='searchTextType eq "T"'>
		   and 기안제목 like #{searchText}  {escape '`'}
		 </when>
		 <when test='searchTextType eq "G"'>
		   and T2.사원명 like #{searchText}  {escape '`'}
		 </when>
		 </choose>
		 <if test='searchGyeoljaeType neq "A"'>
		   and T1.결재타입 = #{searchGyeoljaeType}
		 </if>
		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
	</select>
	
	<select id="selectMySangsin" parameterType="map" resultType="map">
		<choose>
		<when test="summary == -1">
		select sangsinNum, title, gianja, status, attCnt, writeDate, attCnt, type
		  from (
				select row_number() over(order by 기안작성일 desc) as rnum, T1.상신코드  sangsinNum, 기안제목 title, T2.사원명 gianja,
					   case when 처리상태 = 'D' then '기안'
					        when 처리상태 = 'S' then '결재중'
					        when 처리상태 = 'C' then '결재완료'
					        when 처리상태 = 'R' then '반려'
					   end status,
					   case when 결재타입 = 1 then '일반업무'
					        when 결재타입 = 2 then '휴가'
					   end type, 
					   convert(char(16), 기안작성일, 20) writeDate, 첨부파일수 attCnt
				  from [동림].[dbo].[상신] T1
				 inner join [동림].[dbo].[사원] T2
				    on T1.기안자 = T2.사원코드
				  left outer join (
				  	 select count(파일코드) 첨부파일수, 상신코드
				  	   from [동림].[dbo].[상신첨부파일]
				  	  group by 상신코드
				  ) T3
				    on T1.상신코드 = T3.상신코드
				 where 기안자 = #{gianja}
				<if test='searchGyeoljaeType neq "A"'>
		   		   and 결재타입 = #{searchGyeoljaeType}
		 		</if>
				<if test='searchStatus neq "A"'>
		   		   and 처리상태 = #{searchStatus}
		 		</if>
		 		<choose>
		 		<when test='searchTextType eq "T"'>
		   		   and 기안제목 like #{searchText}  {escape '`'}
		 		</when>
		 		</choose>
		 		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
		  ) T1
		  where rnum >= #{start} and rnum <![CDATA[<]]> #{end}
		</when>
		<otherwise>
		select top ${summary} T1.상신코드  sangsinNum, 기안제목 title, T2.사원명 gianja,
			   case when 처리상태 = 'D' then '기안'
			        when 처리상태 = 'S' then '결재중'
			        when 처리상태 = 'C' then '결재완료'
			        when 처리상태 = 'R' then '반려'
			   end status, 
			   case when 결재타입 = 1 then '일반업무'
			        when 결재타입 = 2 then '휴가'
			   end type,
			   convert(char(16), 기안작성일, 20) writeDate, 첨부파일수 attCnt
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[사원] T2
		    on T1.기안자 = T2.사원코드
		  left outer join (
		  	 select count(파일코드) 첨부파일수, 상신코드
		  	   from [동림].[dbo].[상신첨부파일]
		  	  group by 상신코드
		  ) T3
		    on T1.상신코드 = T3.상신코드
		 where 기안자 = #{gianja}
		 order by 기안작성일 desc
		</otherwise>
		</choose>
	</select>
	
<!-- 	<select id="selectMyGyeoljae" statementType="CALLABLE" parameterType="map" resultType="map"> -->
<!-- 		{call [동림].[dbo].[UP_내결재건]( -->
<!-- 			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int} -->
<!-- 		)} -->
<!-- 	</select> -->
	
	<select id="selectMyGyeoljae" parameterType="map" resultType="map">
		<choose>
		<when test="summary == -1">
		select sangsinNum, title, gianja, status, attCnt, writeDate, attCnt
		  from (
				select row_number() over(order by 기안작성일 desc) as rnum, T1.상신코드 sangsinNum, T1.기안제목 title, T4.사원명 gianja, 
					   case when T1.처리상태='D' then '기안'
							when T1.처리상태='S' then '결재중'
					   end as status,
					   convert(char(16), 기안작성일, 20) writeDate,
					   T3.첨부파일수 attCnt
				  from [동림].[dbo].[상신] T1
				 inner join [동림].[dbo].[결재라인] T2
				    on T1.상신코드 = T2.상신코드
				  left outer join (
				  	   select count(파일코드) 첨부파일수, 상신코드
					     from [동림].[dbo].[상신첨부파일]
					    group by 상신코드
				 ) T3  on T1.상신코드 = T3.상신코드
				 inner join [동림].[dbo].[사원] T4
				    on T1.기안자 = T4.사원코드 
				 where T2.결재처리자 = #{sawonCode}
				   and (T2.처리상태 = 'D' or T2.처리상태 = 'S')
				   <if test='searchStatus neq "A"'>
		   		   and T1.처리상태 = #{searchStatus}
				   </if>
				   <if test='searchGyeoljaeType neq "A"'>
		   		   and 결재타입 = #{searchGyeoljaeType}
		 		   </if>
				   <choose>
				   <when test='searchTextType eq "T"'>
		   		   and 기안제목 like #{searchText}  {escape '`'}
		 		   </when>
		 		   </choose>
		 		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
		) T1
		where rnum >= #{start} and rnum <![CDATA[<]]> #{end}
		</when>
		<otherwise>
		select top ${summary} T1.상신코드 sangsinNum, T1.기안제목 title, T4.사원명 gianja, 
			   case when T1.처리상태='D' then '기안'
					when T1.처리상태='S' then '결재중'
			   end as status,
			   convert(char(16), 기안작성일, 20) writeDate,
			   T3.첨부파일수 attCnt
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[결재라인] T2
		    on T1.상신코드 = T2.상신코드
		  left outer join (
		  	   select count(파일코드) 첨부파일수, 상신코드
			     from [동림].[dbo].[상신첨부파일]
			    group by 상신코드
		 ) T3  on T1.상신코드 = T3.상신코드
		 inner join [동림].[dbo].[사원] T4
		    on T1.기안자 = T4.사원코드 
		 where T2.결재처리자 = #{sawonCode}
		   and (T2.처리상태 = 'D' or T2.처리상태 = 'S')
		 order by 기안작성일 desc
		</otherwise>
		</choose>
	</select>
	
	<select id="selectMyCommitedGyeoljae" parameterType="map" resultType="map">
		select sangsinNum, title, gianja, status, attCnt, writeDate, attCnt, case when 결재타입 = 1 then '일반업무' when 결재타입 = 2 then '휴가' end type
		  from (
				select row_number() over(order by 기안작성일 desc) as rnum, T1.상신코드 sangsinNum, T1.기안제목 title, T4.사원명 gianja, T1.결재타입, 
		   	   		   '결재완료' status, convert(char(16), 기안작성일, 20) writeDate,  T3.첨부파일수 attCnt
	  	  		  from [동림].[dbo].[상신] T1
	  			  left outer join (
	  	   			   select count(파일코드) 첨부파일수, 상신코드
		     			 from [동림].[dbo].[상신첨부파일]
		    			group by 상신코드
	 			  ) T3  on T1.상신코드 = T3.상신코드
	 			 inner join [동림].[dbo].[사원] T4
	    			on T1.기안자 = T4.사원코드 
	    		   <choose>
		 		   <when test="sawonCode != null">
		  		   where T1.기안자  = #{sawonCode}
		   		     and T1.처리상태 = 'C'
		 		   </when>
		 		   <otherwise>
		  		   where T1.처리상태 = 'C'
		 		   </otherwise>
		 		   </choose>
	   			   <choose>
				   <when test='searchTextType eq "T"'>
		   		   and 기안제목 like #{searchText}  {escape '`'}
		 		   </when>
		 		   <when test='searchTextType eq "G"'>
		   		   and T4.사원명 like #{searchText}  {escape '`'}
		 		   </when>
		 		   </choose>
		 		   <if test='searchGyeoljaeType neq "A"'>
		   		   and T1.결재타입 = #{searchGyeoljaeType}
		 		   </if>
		 		   and 기안작성일 >= #{searchStartDate} and 기안작성일 <![CDATA[<]]>= #{searchEndDate}
		 ) T1
		 where rnum >= #{start} and rnum <![CDATA[<]]> #{end}
	</select>
	
	<resultMap id="RM_Sangsin" type="Sangsin">
		<result column="상신코드" property="sangsinNum" javaType="int"/>
		<result column="기안제목" property="title" javaType="string"/>
		<result column="기안내용_CODE" property="content" javaType="string"/>
		<result column="기안내용_PLAIN" property="plainContent" javaType="string"/>
		<result column="기안자" property="gianja" javaType="string"/>
		<result column="기안작성일" property="writeDate" javaType="string"/>
		<result column="결재타입" property="gyeoljaeType" javaType="string"/>
		<result column="휴가시작일" property="startDate" javaType="string"/>
		<result column="수정중" property="modify" javaType="string" />
		<result column="휴가종료일" property="endDate" javaType="string"/>
		<result column="처리상태" property="status" javaType="string"/>
		<collection property="attachFiles" column="상신코드" 
					javaType="java.util.ArrayList"
					ofType="AttachFile" 
					select="selectSangsinAttachFiles"
					/>
		<collection property="gyeoljaeLines" column="상신코드"
					javaType="java.util.ArrayList"
					ofType="map"
					select="selectGyeoljaeLines" />
	</resultMap>
	
	<resultMap id="RM_ModifySangsin" type="Sangsin">
		<result column="상신코드" property="sangsinNum" javaType="int"/>
		<result column="기안제목" property="title" javaType="string"/>
		<result column="기안내용_CODE" property="content" javaType="string"/>
		<result column="기안내용_PLAIN" property="plainContent" javaType="string"/>
		<result column="기안자" property="gianja" javaType="string"/>
		<result column="기안작성일" property="writeDate" javaType="string"/>
		<result column="결재타입" property="gyeoljaeType" javaType="string"/>
		<result column="휴가시작일" property="startDate" javaType="string"/>
		<result column="휴가종료일" property="endDate" javaType="string"/>
		<result column="처리상태" property="status" javaType="string"/>
		<result column="결재서브타입" property="gyeoljaeSubType" javaType="string"/>
		<result column="휴가기간" property="term" javaType="string"/>
		<collection property="attachFiles" column="상신코드" 
					javaType="java.util.ArrayList"
					ofType="AttachFile" 
					select="selectSangsinAttachFiles"
					/>
		<collection property="gyeoljaeLines" column="상신코드"
					javaType="java.util.ArrayList"
					ofType="map"
					select="selectMyModifyGyeoljaeLines" />
	</resultMap>
	
	<select id="selectMyModifySangsin" parameterType="map" resultMap="RM_ModifySangsin">
		 select T1.상신코드, 기안제목, REPLACE(기안내용_CODE, '"', '▦') 기안내용_CODE , convert(char(16), 기안작성일, 20) 기안작성일, 결재타입, 휴가시작일, 휴가종료일, 처리상태, 결재서브타입, 휴가기간
		  from [동림].[dbo].[상신] T1
		 where T1.상신코드 = #{sangsinNum}
		   and T1.기안자 = #{sawonCode}
	</select>
	
	<select id="selectMyModifyGyeoljaeLines" parameterType="string" resultType="map">
		select T1.결재처리자  sawonCode, T2.사원명 sawonName, T2.사원아이디 sawonId,  T3.직급명 sawonPosition, T2.이메일 email
		  from [동림].[dbo].[결재라인] T1
		 inner join [동림].[dbo].[사원] T2 
		    on T1.결재처리자 = T2.사원코드 
		 inner join [동림].[dbo].[직급] T3
		    on T2.직급코드 = T3.직급코드
		 where T1.상신코드 = #{sangsinNum} 
		 order by 결재순서 
	</select>
	
	<select id="selectGyeoljaeLines" parameterType="string" resultType="map">
		select T2.사원명 gyeoljaeja, 결재순서 gyeoljaeOrder, 처리상태 status, T1.결재라인코드 code
		  from [동림].[dbo].[결재라인] T1
		 inner join [동림].[dbo].[사원] T2 
		    on T1.결재처리자 = T2.사원코드 
		 where T1.상신코드 = #{sangsinNum} 
		 order by 결재순서 
	</select>
	
	<select id="selectMyGyeoljaeDetail" parameterType="map" resultMap="RM_Sangsin">
		select T1.상신코드, 기안제목, 기안내용_CODE, T3.사원명 as 기안자, convert(char(16), 기안작성일, 20) 기안작성일, 결재타입, 휴가시작일, 휴가종료일, T1.처리상태
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[결재라인] T2
		    on T1.상신코드 = T2.상신코드
		 inner join [동림].[dbo].[사원] T3
		    on T1.기안자 = T3.사원코드
		 where T1.상신코드 = #{sangsinNum}
		   and T2.결재처리자 = #{sawonCode}
	</select> 
	
	<select id="selectMySangsinDetail" parameterType="map" resultMap="RM_Sangsin">
		 <choose>
		 <when test="sawonCode != null">
		 select T1.상신코드, 기안제목, 기안내용_CODE, convert(char(16), 기안작성일, 20) 기안작성일, 결재타입, 휴가시작일, 휴가종료일, isnull(수정중, 'N') 수정중, 처리상태
		  from [동림].[dbo].[상신] T1
		 where T1.상신코드 = #{sangsinNum}
		   and T1.기안자 = #{sawonCode}
		 </when>
		 <otherwise>
		  select T1.상신코드, 기안제목, 기안내용_CODE, convert(char(16), 기안작성일, 20) 기안작성일, 사원명 as 기안자, 결재타입, 휴가시작일, 휴가종료일, 처리상태
		    from [동림].[dbo].[상신] T1
		   inner join [동림].[dbo].[사원] T2
		      on T1.기안자 = T2.사원코드
		   where T1.상신코드 = #{sangsinNum}
		     and T1.처리상태 = 'C'
		 </otherwise>
		 </choose>
		 
	</select>
	
	<select id="selectSangsinAttachFiles" parameterType="string" resultType="AttachFile">
		select 파일명  name, 파일코드 code, 파일확장자 ext, 파일크기 size, 상신코드 sangsinNum
		  from [동림].[dbo].[상신첨부파일]
		 where 상신코드 = #{sangsinNum}
	</select>
	
	<select id="selectAttachFile" parameterType="map" resultType="AttachFile">
		select top 1 파일코드 code, 파일명 name, 파일확장자 ext, 파일내용 fileByte
		  from [동림].[dbo].[상신첨부파일] T1
		 inner join [동림].[dbo].[상신] T2
		    on T1.상신코드 = T2.상신코드
		 inner join [동림].[dbo].[결재라인] T3
		    on T3.상신코드 = T1.상신코드
		 where T1.파일코드 = #{attachFileCode}
		 <choose>
		 <when test='positionGubun.equals("3")'>
		   and (T2.기안자 = #{sawonCode} or T3.결재처리자  = #{sawonCode})
		 </when>
		 </choose>
	</select>
	
	<update id="updateCommitMyGyeoljae" statementType="CALLABLE" parameterType="map">
		{call [동림].[dbo].[UP_결재승인](
			#{sangsinCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{opinion, mode=IN, jdbcType=NVARCHAR, javaType=string},
			#{result, mode=OUT, jdbcType=INTEGER, javaType=int},
			#{gianja, mode=OUT, jdbcType=INTEGER, javaType=int},
			#{gianjaName, mode=OUT, jdbcType=NVARCHAR, javaType=string},
			#{nextGyeoljaeja, mode=OUT, jdbcType=INTEGER, javaType=int}
		)}
	</update>
	
	<update id="updateRejectMyGyeoljae" statementType="CALLABLE" parameterType="map">
		{call [동림].[dbo].[UP_결재반려](
			#{sangsinCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{sawonCode, mode=IN, jdbcType=INTEGER, javaType=int},
			#{opinion, mode=IN, jdbcType=NVARCHAR, javaType=string},
			#{result, mode=OUT, jdbcType=INTEGER, javaType=int},
			#{gianja, mode=OUT, jdbcType=INTEGER, javaType=int},
			#{gianjaName, mode=OUT, jdbcType=NVARCHAR, javaType=string}
		)}
	</update>
	
	<select id="selectGyeoljaeComment" parameterType="map" resultType="string">
		<choose>
		<when test="committed != null">
		select 의견
		  from [동림].[dbo].[결재내역] T1
		 inner join [동림].[dbo].[상신] T2
		    on T1.상신코드 = T2.상신코드
		 where T1.결재라인코드 = #{gyeoljaeLineCode}
		   and T2.처리상태 = 'C'
		</when>
		<otherwise>
		select distinct 의견
		  from (
				select T1.상신코드, T2.기안자, 의견
		  		  from [동림].[dbo].[결재내역] T1
		 		 inner join [동림].[dbo].[상신] T2
		    		on T1.상신코드 = T2.상신코드
		 		 where T1.결재라인코드 = #{gyeoljaeLineCode}
		  ) T1
		  inner join [동림].[dbo].[결재라인] T2
		     on T1.상신코드 = T2.상신코드
		  where 기안자 = #{sawonCode} or T2.결재처리자 = #{sawonCode}
		</otherwise>
		</choose>
	</select>

	<select id="selectSangsin" parameterType="map" resultType="int">
		select count(상신코드)
		  from [동림].[dbo].[상신] 
		 where 기안자 = #{sawonCode} 
		   and 상신코드 = #{sangsinNum}
		 <if test="gyeoljaeType != null">
		   and 결재타입 = #{gyeoljaeType}
		 </if>
		 <if test="status != null">
		   and 처리상태 = #{status}
		 </if>
	</select>
	
	<select id="selectEditableSangsin" parameterType="map" resultType="int">
		select count(T1.상신코드)
		  from [동림].[dbo].[상신] T1
		 inner join [동림].[dbo].[결재라인] T2
		    on T1.[상신코드] = T2.[상신코드]
		 where T1.[상신코드] = #{sangsinNum}
		   and T2.처리상태  in ('C', 'R') 
	</select>
	
	<update id="updateModifySangsin" parameterType="string">
		update [동림].[dbo].[상신]
		   set [수정중] = 'Y'
		 where [상신코드] = #{sangsinNum}
		   and 처리상태 = 'D'
		   and 0 = (select count(결재라인코드) from [동림].[dbo].[결재라인] where [상신코드] = #{sangsinNum} and 처리상태 in ('R', 'C')) 
	</update>
	
	<update id="updateModifyCancelSangsin" parameterType="string">
		update [동림].[dbo].[상신]
		   set [수정중] = null
		 where [상신코드] = #{sangsinNum}
		   and [수정중] = 'Y'
	</update>
	
	<update id="updateMySangsin" parameterType="Sangsin">
		update [동림].[dbo].[상신]
		   set 기안제목 = #{title},
		   	       기안내용_CODE = #{content},
		   	       기안내용_PLAIN = #{plainContent},
		   	       기안작성일 = getDate(),
		   	       결재타입 = #{gyeoljaeType}, 
		  <choose>
		  <when test='gyeoljaeType == "1"'>
		  	       휴가시작일 = null,
		  	       휴가종료일 = null,
		  	       결재서브타입 = null, 
		  	       휴가기간 = null   
		  </when>
		  <!-- 결재타입 휴가 --> 
		  <otherwise>
		  	       휴가시작일 = #{startDate},
		  	       휴가종료일 = #{endDate},
		  	       결재서브타입 = #{gyeoljaeSubType},
		  	       휴가기간 = #{term}    
		  </otherwise>
		  </choose> 
		 where 상신코드 = #{sangsinNum}
	</update>
	
	<delete id="deleteGyeoljaeLines" parameterType="string">
		delete from [동림].[dbo].[결재라인] where [상신코드] = #{sangsinNum}
	</delete>
	
	<select id="selectFirstGyeoljaeja" parameterType="string" resultType="map">
		select 사원코드 sawonCode, 사원명 sawonName
		  from [동림].[dbo].[결재라인] T1
		 inner join [동림].[dbo].[사원] T2
		    on T1.결재처리자 = T2.사원코드
		 where T1.결재순서 = 1
		   and T1.상신코드 = #{sangsinNum}
	</select>
	
	<delete id="deleteGyeoljaeAttachFiles" parameterType="int">
		delete from [동림].[dbo].[상신첨부파일] where 상신코드 = #{sangsinNum}
	</delete>
	
	<update id="updateSangsinModifyFlag" parameterType="int">
		update [동림].[dbo].[상신]
		   set 수정중 = null
		 where 상신코드 = #{sangsinNum}
	</update>
	
	<delete id="deleteMySangsin" statementType="CALLABLE" parameterType="map">
		{call [동림].[dbo].[UP_상신삭제](
			#{sangsinNum, mode=IN, jdbcType=INTEGER, javaType=int},
			#{result, mode=OUT, jdbcType=INTEGER, javaType=int}
		)}
	</delete> 
	
	<delete id="deleteGyeoljaeAttachFileByCode" parameterType="string">
		delete from [동림].[dbo].[상신첨부파일] where 파일코드 = #{delAttachCode}
	</delete>
	
	
	<resultMap id="RM_VacationDocs" type="VacationDocs">
		<result column="상신코드" property="sangsinNum" javaType="string"/>
		<result column="사원명" property="sawonName" javaType="string"/>
		<result column="부서명" property="departmentName" javaType="string"/>
		<result column="직급명" property="positionName" javaType="string"/>
		<result column="서명" property="mySign" javaType="string"/>
		<result column="결재서브타입" property="type" javaType="string"/>
		<result column="휴가기간" property="term" javaType="string"/>
		<result column="시작년도" property="startYear" javaType="string"/>
		<result column="시작월" property="startMonth" javaType="string"/>
		<result column="시작일" property="startDay" javaType="string"/>
		<result column="종료년도" property="endYear" javaType="string"/>
		<result column="종료월" property="endMonth" javaType="string"/>
		<result column="종료일" property="endDay" javaType="string"/>
		<result column="todayYear" property="todayYear" javaType="string"/>
		<result column="todayMonth" property="todayMonth" javaType="string"/>
		<result column="todayDay" property="todayDay" javaType="string"/>
		<collection property="signs" column="상신코드" 
					javaType="java.util.ArrayList"
					ofType="map" 
					select="selectGyeoljaejaSigns"/>
	</resultMap>
	<select id="selectVacationDocsInfo" parameterType="map" resultMap="RM_VacationDocs">
		select T2.사원명,
			   T1.상신코드, 
			   isnull(T3.부서명, '') 부서명, 
			   T4.직급명 , 
			   T2.서명, 
			   T1.결재서브타입, 
			   T1.휴가기간,
			   substring(T1.휴가시작일, 1, 4) 시작년도 ,
			   substring(T1.휴가시작일, 6, 2) 시작월,
			   substring(T1.휴가시작일, 9, 2) 시작일,
			   substring(T1.휴가종료일, 1, 4) 종료년도,
			   substring(T1.휴가종료일, 6, 2) 종료월,
			   substring(T1.휴가종료일, 9, 2) 종료일,
			   year(getDate()) todayYear,
			   month(getDate()) todayMonth,
			   day(getDate()) todayDay
		  from [동림].[dbo].[상신] T1
		  inner join [동림].[dbo].[사원] T2
		     on T1.기안자 = T2.사원코드
		  inner join [동림].[dbo].[부서] T3
		     on T2.부서코드 = T3.부서코드 
		  inner join [동림].[dbo].[직급] T4
		     on T2.직급코드 = T4.직급코드
		 where 상신코드 = #{sangsinNum}
	</select>
	
	<select id="selectGyeoljaejaSigns" parameterType="string" resultType="map">
		select T1.결재순서 [order], T2.서명 sign
		  from [동림].[dbo].[결재라인] T1
		 inner join [동림].[dbo].[사원] T2
		    on T1.결재처리자 = T2.사원코드
		 where T1.상신코드 = #{상신코드}
	</select>
</mapper>
